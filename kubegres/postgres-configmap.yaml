apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-configmap
  namespace: postgres
data:

  primary_init_script.sh: |
    #!/bin/bash
    set -e

    #This script assumes that the env-var $POSTGRES_MY_DB_PASSWORD contains the password of the custom user to create
    #You can add any env-var in your kubegres resource config YAML

    dt=$(date '+%Y-%m-%d %H:M:S');
    echo "$dt - Running init script the 1 st time Primary PostgreSql container is created";

    customDatabaseName="opematraw"
    customUserName="admin"
    customSchema="matcher"
    customRole="matcher"
    
    echo "$dt - Running: psql -v ON_ERROR_STOP=1 --username $POSTGRES_USER --dbname $POSTGRES_DB ...";

    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" << EOSQL

    CREATE DATABASE $customDatabaseName;
    \c $customDatabaseName;
    CREATE USER $customUserName WITH PASSWORD '$POSTGRES_PASSWORD';
    CREATE SCHEMA $customSchema;
    CREATE ROLE $customRole;

    GRANT CONNECT ON DATABASE $customDatabaseName TO $customUserName;
    GRANT CONNECT ON DATABASE $customDatabaseName TO $POSTGRES_USER;
    GRANT USAGE ON SCHEMA $customSchema TO $customUserName;
    GRANT ALL PRIVILEGES ON SCHEMA $customSchema to $customUserName;

    CREATE TABLE $customSchema.animal(size integer, body integer, chest integer, neck integer, breed varchar(100), color varchar(100), "firstImage" bytea, "secondImage" bytea, "thirdImage" bytea, "fourthImage" bytea, "fifthImage" bytea, "sixthImage" bytea, "seventhImage" bytea, "eighthImage" bytea, "ninthImage" bytea, "tenthImage" bytea ,"signDate" timestamp without time zone, "statusInd" boolean);
    
    CREATE TABLE $customSchema.sociopath(rfc varchar(100), gender varchar(10), street varchar(100), number integer, section varchar(100), district varchar(100), village varchar(100), country varchar(100), code integer, "firstImage" bytea, "secondImage" bytea, "thirdImage" bytea, "signDate" timestamp without time zone, "statusInd" boolean);

    CREATE TABLE $customSchema.adopter(rfc varchar(100), gender varchar(10), street varchar(100), number integer, section varchar(100), district varchar(100), village varchar(100), country varchar(100),code integer, email varchar(100), telephone numeric(10), celphone numeric(10), "firstImage" bytea, "secondImage" bytea, "thirdImage" bytea, "signDate" timestamp without time zone, "statusInd" boolean);

    CREATE TABLE $customSchema.partnership(rfc varchar(100),street varchar(100), number integer, section varchar(100), district varchar(100), village varchar(100), country varchar(100), code integer, email varchar(100), telephone numeric(10), celphone  numeric(10), url varchar(100), "firstImage" bytea, "secondImage" bytea, "thirdImage" bytea, "signDate" timestamp without time zone, "statusInd" boolean);
    
    INSERT INTO $customSchema.animal VALUES (1, 1, 1, 1, 'PASTOR ALEMAN', 'black','','' ,'' ,'' ,'' ,'' ,'' ,'' ,'' ,'' , to_timestamp('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS') , FALSE);
    INSERT INTO $customSchema.sociopath VALUES ('','Masculino','4 MILPAS', 309,'LA AURORA PRIMERA SECCION','ESTADO DE MEXICO', 'NEZAHUALCOYOTL','MEXICO', 08900, '' , '', '' ,to_timestamp('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'), FALSE);
    INSERT INTO $customSchema.adopter VALUES ('CAOA911130HDFNRL05', 'Masculino' ,'ROSA DE CASTILLA', 51, 'MOLINOS', 'CIUDAD DE MEXICO', 'ALVARO OBREGON', 'MEXICO', 01470,'cano.ortiz.alberto@banorte.com', 5551128243,5539050109 ,'','','',to_timestamp('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'));
    INSERT INTO $customSchema.partnership VALUES ('CAOA911130HDFNRL05', 'ROSA DE CASTILLA', 51, 'MOLINOS', 'CIUDAD DE MEXICO', 'ALVARO OBREGON', 'MEXICO', 01470, 'test@gmail.com', 5512839875, 5549040798, 'https://jupyterhub.com', '', '', '',to_timestamp('1900-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'));
 
    GRANT select, insert, update ON TABLE $customSchema.animal TO $customUserName;
    GRANT select, insert, update ON TABLE $customSchema.sociopath TO $customUserName;
    GRANT select, insert, update ON TABLE $customSchema.adopter TO $customUserName;
    GRANT select, insert, update ON TABLE $customSchema.partnership TO $customUserName;

    EOSQL

    echo "$dt - Init script is completed";