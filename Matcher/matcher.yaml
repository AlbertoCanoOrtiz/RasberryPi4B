openapi: 3.0.0
info:
  version: '1.0'
  title: 'matcher'
servers:
  - url: 'localhost:3000'
tags:
  - name: sociopath
    description: People who causing harm or suffering to animals previously adopted.
  - name: animal
    description: Animals in sources like animal shelters and rescue groups.
  - name: partnership
    description: Rescue groups. 
  - name: adopter
    description: People who want pets. 
paths:
  /animal:
    get: 
      summary: 'Development endpoint: Returns details about all animals in the shelter'
      tags:
        - animal
      parameters:
        - in: query
          name: skip
          description : the number of rows skip before starting to count results.
          schema : 
            type : integer
            minimum : 0
            default : 0
        - in: query
          name : limit
          description : the number max of rows to collect for the result.
          schema : 
            type : integer
            minimum : 0
            default : 100
        - in: query
          name: size
          schema:
            type: integer
          required: False
        - in: query
          name: body
          schema:
            type: integer
          required: False
        - in: query
          name: chest
          schema:
            type: integer
          required: False
        - in: query
          name: neck
          schema:
            type: integer
          required: False
        - in: query
          name: breed
          schema:
            type: string
            minLength: 10
          required: False
        - in : query
          name: color 
          schema:
            $ref : '#/components/schemas/color'
          required: False
        - in: query
          name: firstImage
          schema:
            type: string
            format: byte
          required : True
        - in: query
          name: signDate
          schema: 
            type: string
            format: date-time
          required: False
        - in: query
          name: statusInd
          schema:
            type: integer
            minimum: 0
            maximum: 1
          required: False
      responses:
        '200':
          description: 'Development response: Returns details about'
          content: 
            application/json: 
              schema : 
                $ref: '#/components/schemas/animal'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /insertAnimal:
    post:
      summary: 'Development endpoint: Insert in the datase one row with animal schema'
      tags: 
        - animal
      parameters : 
        - in : query
          name : animal
          schema: 
            $ref: '#/components/schemas/animal'
      responses:
        '201' : 
          description: 'Development endpoint : Returns details about'
          content: 
            application/json: 
              schema : 
                $ref : '#/components/schemas/success'
        default: 
          description: Unexpected error 
          content :
            application/json : 
              schema: 
                $ref : '#/components/schemas/error'
  /deleteAnimal: 
    delete: 
      summary: 'Development endpoint : it delete records in the table animal'
      tags: 
        - animal
      responses:
        '200':
          description: 'Development endpoint: it returns details about the status of transaction'
          content:
            application/json: 
              schema : 
                $ref: '#/components/schemas/success'
        default: 
          description : Unexpected error
          content:
            application/json :
              schema :
                $ref : '#/components/schemas/error'
  /sociopath:
    get:
      summary: 'Development endpoint: Returns details about all sociopath'
      tags:
       - sociopath
      parameters:
        - in : query
          name : skip
          description : the number of rows skip before starting to count results.
          schema :
            type : integer
            minimum : 0
            default : 0
        - in : query
          name : limit
          description : the number of rows to collect for the result.
          schema :
            type : integer
            minimum : 0
            default : 100
        - in: query 
          name: rfc
          schema:
            type: string
          required: False
        - in : query
          name: street
          schema: 
            type: string
          required: True
        - in : query
          name: number
          schema:
            type: integer
          required: True
      responses:
        '200':
          description: 'Development response: Returns details about'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sociopath'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /insertSociopath:
    post:
      summary: 'Development endpoint: Insert in the datase one row with sociopath schema'
      tags: 
        - sociopath
      parameters : 
        - in : query
          name : sociopath
          schema: 
            $ref: '#/components/schemas/sociopath'
      responses:
        '201' : 
          description: 'Development endpoint : Returns details about'
          content: 
            application/json: 
              schema : 
                $ref : '#/components/schemas/success'
        default: 
          description: Unexpected error 
          content :
            application/json : 
              schema: 
                $ref : '#/components/schemas/error'
  /deleteSociopath:
    delete:
      summary : 'Development endpoint: it delete records in the table of sociopath'
      tags:
        - sociopath
      responses:
        '200' :
          description : 'Development endpoint: it returns details about status of transaction'
          content:
            application/json: 
              schema: 
                $ref: '#/components/schemas/success'
        default :
          description: Unexpected error
          content :
            application/json: 
              schema : 
                $ref : '#/components/schemas/error'
  /adopter:
    get:
      summary: 'Development endpoint: Return details about all adopters'
      tags:
        - adopter
      parameters:
        - in: query
          name: skip
          description : the number of rows skip before starting to count results.
          schema : 
            type : integer
	    minimum : 0
	    default : 0
        - in: query
          name : limit
          description : the number max of rows to collect for the result.
          schema : 
            type : integer
            minimum : 0
            default : 100
        - in: query 
          name: rfc
          schema:
            type: string
          required: True
        - in : query
          name: street
          schema: 
            type: string
          required: True
        - in : query
          name: number
          schema:
            type: integer
          required : True
      responses:
        '200':
          description: 'Development response: Returns details about'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/adopter'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /insertAdopter:
    post:
      summary: 'Development endpoint: Insert in the datase one row with adopter schema'
      tags: 
        - adopter
      parameters : 
        - in : query
          name : adopter
          schema: 
            $ref: '#/components/schemas/adopter'
      responses:
        '201' : 
          description: 'Development endpoint : Returns details about'
          content: 
            application/json: 
              schema : 
                $ref : '#/components/schemas/success'
        default: 
          description: Unexpected error 
          content :
            application/json : 
              schema: 
                $ref : '#/components/schemas/error'
  /deleteAdopter:
    delete:
      summary: 'Development endpoint: it delete records in the table adopters'
      tags:
        - adopter
      parameters:
        - in: query 
          name: rfc
          schema:
            type: string
          required: True
      responses:
        '200' :
          description : 'Development endpoint: it returns details about status of transaction'
          content:
            application/json: 
              schema: 
                $ref: '#/components/schemas/success'
        default :
          description: Unexpected error
          content :
            application/json: 
              schema : 
                $ref : '#/components/schemas/error'
  /partnership:
    get:
      summary: 'Development endpoint: Return details about all partnership'
      tags:
        - partnership
      parameters:
        - in: query
          name: skip
          description : the number of rows skip before starting to count results.
          schema : 
            type : integer
            minimum : 0
            default : 0
        - in: query
          name : limit
          description : the number max of rows to collect for the result.
          schema : 
            type : integer
            minimum : 0
            default : 100
        - in: query 
          name: rfc
          schema:
            type: string
          required: True
        - in : query
          name: street
          schema: 
            type: string
          required: True
        - in : query
          name: number
          schema:
            type: integer
          required : True
      responses:
        '200':
          description: 'Development response: Returns details about'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/partnership'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /insertPartnership:
    post:
      summary: 'Development endpoint: Insert in the datase one row with partnership schema'
      tags: 
        - sociopath
      parameters : 
        - in : query
          name : sociopath
          schema: 
            $ref: '#/components/schemas/partnership'
      responses:
        '201' : 
          description: 'Development endpoint : Returns details about'
          content: 
            application/json: 
              schema : 
                $ref : '#/components/schemas/success'
        default: 
          description: Unexpected error 
          content :
            application/json : 
              schema: 
                $ref : '#/components/schemas/error'
  /deletePartnership:
    delete:
      summary: 'Development endpoint: it delete records in the table partnership'
      tags:
        - partnership
      parameters:
        - in: query 
          name: rfc
          schema:
            type: string
          required: True
      responses:
        '200' :
          description : 'Development endpoint: it returns details about status of transaction'
          content:
            application/json: 
              schema: 
                $ref: '#/components/schemas/success'
        default :
          description: Unexpected error
          content :
            application/json: 
              schema : 
                $ref : '#/components/schemas/error'
components:
  schemas:
    success:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    color:
      type: string
      enum : 
        - black
        - white
        - red
        - green 
        - blue 
    animal:
      type: object
      required: 
        - size
        - breed
      properties:
        size:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
        body:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
        chest:
          type: integer
          format: int32
          minimum: 0 
          maximum: 100
        neck:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
        breed:
          type: string
          pattern: '^\w'
          minLength: 10
        color : 
          $ref : '#/components/schemas/color'
        firstImage:
          type: string
          format: byte
        secondImage:
          type: string
          format: binary
        thirdImage:
          type: string
          format: byte
        fourthImage:
          type: string
          format: binary
        fifthImage:
          type: string
          format: byte
        sixthImage:
          type: string
          format: binary
        seventhImage:
          type: string
          format: byte
        eighthImage:
          type: string
          format: binary
        ninthImage:
          type: string
          format: byte
        tenthImage:
          type: string
          format: binary
        signDate:
          type: string
          format: date-time
          nullable: false
        statusInd:
          type: boolean
          nullable: false
    sociopath:    
      type: object 
      required:
        - street
        - number
      properties:
        rfc: 
          type: string
          pattern: '[a-zA-Z0-9]+'
          minLength: 13
        street: 
          type: string
          pattern: '\w'
          nullable: false
          minLength: 1 
          maxLength: 100
        number: 
          type: integer
          format: int32
        section:
          type: string
          pattern: '\w'
          nullable: false
          minLength: 1
          maxLength: 100
        district:
          type: string
          pattern: '\w'
          nullable: false
          minLength: 1
          maxLength: 100
        village:
          type: string
          pattern: '\w'
          nullable: false
          minLength: 1
          maxLength: 100
        country:
          type: string
          pattern: '\w'
          minLength: 1
          maxLength: 100
        code:
          type: integer
          pattern: '\d{5}'
          format: int32
        firtsimage:
          type: string
          format: byte
        secondImage:
          type: string
          format: binary
        thirdImage:
          type: string
          format: byte
        signDate:
          type: string
          format: date-time
    adopter:
      type: object
      required: 
       - rfc
      properties:
        rfc: 
          type: string
          pattern: '[a-zA-Z0-9]+'
          minLength: 13
          nullable: false
        street: 
          type: string
          pattern: '\w'
          nullable: false
          minLength: 1 
          maxLength: 100
        number: 
          type: integer
          format: int32
        section:
          type: string
          pattern: '\w'
          nullable: false
          minLength: 1
          maxLength: 100
        district:
          type: string
          pattern: '\w'
          nullable: false
          minLength: 1
          maxLength: 100
        village:
          type: string
          pattern: '\w'
          nullable: false
          minLength: 1
          maxLength: 100
        country:
          type: string
          pattern: '\w'
          minLength: 1
          maxLength: 100
        code:
          type: integer
          pattern: '\d{5}'
          format: int32
        email: 
          type: string
          format: email
          nullable: True
        telephone: 
          type: integer
          minimum: 10
          maximum: 10
          nullable: True
        celphone:
          type: integer
          minimum: 10
          maximum: 10
          nullable: True
        firtsimage:
          type: string
          format: byte
        secondImage:
          type: string
          format: binary
        thirdImage:
          type: string
          format: byte
        signDate:
          type: string
          format: date-time
    partnership:
      type: object
      required:
        - rfc
      properties:
        rfc:
          type: string
          pattern: '[a-zA-Z0-9]+'
          minLength: 13  
          nullable : false
        street: 
          type: string
          pattern: '\w'
          nullable: false
          minLength: 1 
          maxLength: 100
        number: 
          type: integer
          format: int32
        section:
          type: string
          pattern: '\w'
          nullable: false
          minLength: 1
          maxLength: 100
        district:
          type: string
          pattern: '\w'
          nullable: false
          minLength: 1
          maxLength: 100
        village:
          type: string
          pattern: '\w'
          nullable: false
          minLength: 1
          maxLength: 100
        country:
          type: string
          pattern: '\w'
          minLength: 1
          maxLength: 100
        code:
          type: integer
          pattern: '\d{5}'
          format: int32
        email: 
          type: string
          format: email
          nullable: True
        telephone: 
          type: integer
          minimum: 10
          maximum: 10
          nullable: True
        celphone:
          type: integer
          minimum: 10
          maximum: 10
          nullable: True
        url:
          type: string
          format: hostname
          nullable : True
        firtsimage:
          type: string
          format: byte
        secondImage:
          type: string
          format: binary
        thirdImage:
          type: string
          format: byte
        signDate:
          type: string
          format: date-time
          nullable: False
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
security:
  - BasicAuth: []
